-- PID Reflections --

From the lectures, we saw that a PID controller was effective for:
	1) Driving down crosstrack error (CTE) by giving a steering command "proportional" to the error (this is the "P" part in PID).  A steering command proportional to the error alone, though, is insufficient to provide overall stability; the system can overshoot and exhibit growing oscillations leading to unstable operation.
	2) Well then, perhaps if we had some knowledge of how quickly we were driving out the error, we could mitigate overshoot by adding a command proportional to how quickly the error decreases.  The "how quickly" part smacks of looking at the rate of change of the crosstrack error; if we're driving out the error very quickly, we'd need to account for that to avoid overshoot.  This is the "D" part of the controller.
	3) Finally, we have a system that avoids overshoot by combining P and D terms.  What about if the two terms cancel out before we've driven out all of the error (this is known as steady-state error)?  Well, we could add a term that avoids the accumulation of too much error over time that looks at the integral of the crosstrack error; we could avoid too much error buildup by issuing a command proportional to the accumulated error.  This is the "I" part of the controller.

This is all well-and-good, in theory, but what about in practice?  This project had the objective of finding the gains that led to a save traversal of the "lake" test track within the Udacity simulator.  The twiddle method discussed in lecture was used to tune the gains; whenever the system failed to drive down the CTE over a period of time (like when it left the test track), or when it completed a lap (determined heuristically by integrating the velocity over a manual drive), the simulator was restarted and the twiddle process was used to initialize new gains.  The results for the experiment gave a "P" gain of 0.206488, an "I" term of 0., and a "D" term of 1.63698.  This seems to indicate that the PD system was good at driving out the error on it's own; a sufficiently small amount of error was accumulating after combining the "P" and "D" terms.  This is somewhat surprising, although the "D" term is pretty high; ensuring that we're fighting against overshoot pretty hard.